services:
  app:
    build:
      context: .
      target: dev_image
    image: dev_app
    entrypoint: /code/entrypoint.sh
    env_file: .env
    expose: 
      - "8000"
    ports:
      - "8000:8000"
    volumes:
      - ${PWD}:/code
    restart: always
    depends_on:
      - postgresdb


  postgresdb:
    image: postgres:${POSTGRES_VERSION}
    env_file: .env
    expose: 
      - ${PGPORT}
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    restart: always


  rabbitmq:
    image: rabbitmq:4.0.7-management
    expose:
      - ${RABBITMQ_PORT}
    env_file: .env
    volumes:
      - rabbitmq_volume:/var/lib/rabbitmq
    restart: always
  
  worker:
    build:
      context: .
      target: dev_image
    image: dev_app
    env_file: .env
    command: celery -A app.worker.celery worker --loglevel=info
    volumes:
      - ${PWD}:/code
    depends_on:
      - rabbitmq
      - postgresdb

volumes:
  postgres_volume:
  rabbitmq_volume: